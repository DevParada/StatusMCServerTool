/*
 * This file is part of StatusMCServerTool.
 *
 * StatusMCServerTool is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * StatusMCServerTool is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with StatusMCServerTool. If not, see <https://www.gnu.org/licenses/>.
 */
package com.devparada.frame;

import com.devparada.logic.StatusMCServer;
import com.devparada.persistency.DBManager;
import java.awt.Color;
import java.awt.Component;
import java.io.File;
import javax.swing.BorderFactory;
import javax.swing.GroupLayout;
import javax.swing.JLabel;
import javax.swing.JPanel;

/**
 *
 * @author devparada
 */
public class TestFrame extends javax.swing.JFrame {

    /**
     * Creates new form TestFrame
     */
    public TestFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        jDlgAdd = new javax.swing.JDialog();
        jLblAdd = new javax.swing.JLabel();
        jTxtAdd = new javax.swing.JTextField();
        jBtnAdd = new javax.swing.JButton();
        jScrollPane = new javax.swing.JScrollPane();
        jPnlMain = new javax.swing.JPanel();
        jPanelIntro = new javax.swing.JPanel();
        jLblIntro = new javax.swing.JLabel();
        jBtnIntroAdd = new javax.swing.JButton();
        jPnlData = new javax.swing.JPanel();
        jPnlDataEx = new javax.swing.JPanel();
        jLblImage = new javax.swing.JLabel();
        jPnlInfo = new javax.swing.JPanel();
        jLblVersion = new javax.swing.JLabel();
        jLblOnline = new javax.swing.JLabel();
        jLblPlayers = new javax.swing.JLabel();
        jLblIpHosts = new javax.swing.JLabel();

        jDlgAdd.setTitle("Add Server");

        jLblAdd.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblAdd.setText("Intraduce the server IP (with port if different)");

        jTxtAdd.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTxtAdd.setText("myserverminecraft.ddns.net:24321");

        jBtnAdd.setBackground(new java.awt.Color(0, 204, 51));
        jBtnAdd.setText("+ Add");
        jBtnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jDlgAddLayout = new javax.swing.GroupLayout(jDlgAdd.getContentPane());
        jDlgAdd.getContentPane().setLayout(jDlgAddLayout);
        jDlgAddLayout.setHorizontalGroup(
            jDlgAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDlgAddLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jDlgAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jTxtAdd)
                    .addComponent(jLblAdd, javax.swing.GroupLayout.DEFAULT_SIZE, 293, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jDlgAddLayout.createSequentialGroup()
                .addGap(89, 89, 89)
                .addComponent(jBtnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(99, Short.MAX_VALUE))
        );
        jDlgAddLayout.setVerticalGroup(
            jDlgAddLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jDlgAddLayout.createSequentialGroup()
                .addContainerGap(32, Short.MAX_VALUE)
                .addComponent(jLblAdd)
                .addGap(29, 29, 29)
                .addComponent(jTxtAdd, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jBtnAdd)
                .addContainerGap(21, Short.MAX_VALUE))
        );

        jDlgAdd.pack();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("StatusMCServerTool");
        setResizable(false);
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.Y_AXIS));

        jScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);

        jPnlMain.setLayout(new javax.swing.BoxLayout(jPnlMain, javax.swing.BoxLayout.Y_AXIS));

        jPanelIntro.setPreferredSize(new java.awt.Dimension(480, 168));

        jLblIntro.setText("Click the + button to add more servers:");

        jBtnIntroAdd.setBackground(new java.awt.Color(0, 204, 51));
        jBtnIntroAdd.setText("+");
        jBtnIntroAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBtnIntroAddActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelIntroLayout = new javax.swing.GroupLayout(jPanelIntro);
        jPanelIntro.setLayout(jPanelIntroLayout);
        jPanelIntroLayout.setHorizontalGroup(
            jPanelIntroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIntroLayout.createSequentialGroup()
                .addContainerGap(211, Short.MAX_VALUE)
                .addComponent(jLblIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 416, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(212, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelIntroLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jBtnIntroAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanelIntroLayout.setVerticalGroup(
            jPanelIntroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelIntroLayout.createSequentialGroup()
                .addContainerGap(48, Short.MAX_VALUE)
                .addComponent(jLblIntro, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 54, Short.MAX_VALUE)
                .addComponent(jBtnIntroAdd)
                .addContainerGap())
        );

        jPnlMain.add(jPanelIntro);

        jLblImage.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLblImage.setText("ip.a.a.a:25555");

        jPnlInfo.setLayout(new java.awt.GridBagLayout());

        jLblVersion.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblVersion.setText("Version MC");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        jPnlInfo.add(jLblVersion, gridBagConstraints);

        jLblOnline.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblOnline.setText("Online");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPnlInfo.add(jLblOnline, gridBagConstraints);

        jLblPlayers.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblPlayers.setText("Players");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridheight = java.awt.GridBagConstraints.RELATIVE;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 10, 10);
        jPnlInfo.add(jLblPlayers, gridBagConstraints);

        jLblIpHosts.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLblIpHosts.setText("IMG");

        javax.swing.GroupLayout jPnlDataExLayout = new javax.swing.GroupLayout(jPnlDataEx);
        jPnlDataEx.setLayout(jPnlDataExLayout);
        jPnlDataExLayout.setHorizontalGroup(
            jPnlDataExLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDataExLayout.createSequentialGroup()
                .addContainerGap(195, Short.MAX_VALUE)
                .addGroup(jPnlDataExLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLblIpHosts, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLblImage, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 308, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(118, Short.MAX_VALUE))
        );
        jPnlDataExLayout.setVerticalGroup(
            jPnlDataExLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPnlDataExLayout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addGroup(jPnlDataExLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPnlDataExLayout.createSequentialGroup()
                        .addComponent(jLblIpHosts, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLblImage, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addComponent(jPnlInfo, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPnlDataLayout = new javax.swing.GroupLayout(jPnlData);
        jPnlData.setLayout(jPnlDataLayout);
        jPnlDataLayout.setHorizontalGroup(
            jPnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 839, Short.MAX_VALUE)
            .addGroup(jPnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlDataEx, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPnlDataLayout.setVerticalGroup(
            jPnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 191, Short.MAX_VALUE)
            .addGroup(jPnlDataLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPnlDataEx, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPnlMain.add(jPnlData);

        jScrollPane.setViewportView(jPnlMain);

        getContentPane().add(jScrollPane);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBtnIntroAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnIntroAddActionPerformed
        jDlgAdd.setVisible(true);
    }//GEN-LAST:event_jBtnIntroAddActionPerformed

    private void jBtnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBtnAddActionPerformed
        jDlgAdd.setVisible(false);
        jTxtAdd.setText("");
        addPanel();
    }//GEN-LAST:event_jBtnAddActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                TestFrame testFrame = new TestFrame();
                testFrame.setVisible(true);
                testFrame.start();
            }
        });
    }

    private void addPanel() {
        JPanel jPanelServer = new JPanel();
        String ipServer = "";
        int port = 25565; // Default port of the servers

        String JTxtText = jTxtAdd.getText();

        if (JTxtText.length() != 0) {
            String[] ipServerArray = JTxtText.split(":");

            ipServer = ipServerArray[0];

            if (ipServerArray.length == 2) {
                port = Integer.parseInt(ipServerArray[1]);
            }
        }

        StatusMCServer statusServer = new StatusMCServer(ipServer, port);

        JLabel jLabelD1 = new JLabel(JTxtText);
        JLabel jLabelD2 = new JLabel(JTxtText);
        JLabel jLabelD3 = new JLabel(statusServer.showDataSection(JTxtText, "online"));
        JLabel jLabelD4 = new JLabel(statusServer.showDataSection(JTxtText, "version"));
        JLabel jLabelD5 = new JLabel(statusServer.showDataSection(JTxtText, "players"));

        GroupLayout jLayoutServer = new GroupLayout(jPanelServer);
        jPanelServer.setLayout(jLayoutServer);

        JPanel jPanelData = new JPanel();
        jPanelData.setLayout(new java.awt.GridLayout(2, 2));

        jLayoutServer.setHorizontalGroup(jLayoutServer.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(jLayoutServer.createSequentialGroup()
                        .addContainerGap(204, Short.MAX_VALUE)
                        .addComponent(jLabelD1, GroupLayout.PREFERRED_SIZE, 64, GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                        .addComponent(jPanelData, GroupLayout.PREFERRED_SIZE, 308, GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(250, Short.MAX_VALUE))
        );
        jLayoutServer.setVerticalGroup(jLayoutServer.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(GroupLayout.Alignment.TRAILING, jLayoutServer.createSequentialGroup()
                        .addContainerGap(42, Short.MAX_VALUE)
                        .addGroup(jLayoutServer.createParallelGroup(GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabelD1, GroupLayout.PREFERRED_SIZE, 120, GroupLayout.PREFERRED_SIZE)
                                .addComponent(jPanelData, GroupLayout.PREFERRED_SIZE, 69, GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(29, Short.MAX_VALUE))
        );

        // Debugging setBorder
        jPanelServer.setBorder(BorderFactory.createLineBorder(Color.BLACK));

        // Add labels of the panel
        jPanelData.add(jLabelD2);
        jPanelData.add(jLabelD3);
        jPanelData.add(jLabelD4);
        jPanelData.add(jLabelD5);

        jPnlMain.add(jPanelServer);
        jPnlMain.revalidate();
        jPnlMain.repaint();
        start();
    }

    public JLabel getLabel(JPanel panel) {
        for (Component comp : panel.getComponents()) {
            if (comp instanceof JLabel jLabel) {
                return jLabel;
            }
        }
        return null;
    }

    public String test(JPanel newPanel) {
        final StatusMCServer[] statusServerArrayFinal = new StatusMCServer[1];
        final String[] ipServerArrayFinal = new String[1];

        // Debugging getLabel and newPanel
        System.out.println(getLabel(newPanel));
        System.out.println(newPanel);

        //String JLabelText = getLabel(newPanel).getText();
        String JLabelText = "a";

        if (JLabelText.length() != 0) {
            System.out.println("Test test");
            String[] ipServerArray = JLabelText.split(":");

            String ipServer = ipServerArray[0];
            ipServerArrayFinal[0] = ipServer;

            int port;

            if (ipServerArray.length != 2) {
                port = 25565; // Default port of the servers
            } else {
                port = Integer.parseInt(ipServerArray[1]);
            }

            StatusMCServer statusServer = new StatusMCServer(ipServer, port);
            statusServerArrayFinal[0] = statusServer;

            // showDataFrame(statusServerArrayFinal[0], ipServerArrayFinal[0]);
        }

        /*
        
        if (jTxtNameServer.getText().length() != 0) {
            System.out.println("Test jBtnCheck");
            String[] ipServerArray = jTxtNameServer.getText().split(":");

            String ipServer = ipServerArray[0];
            ipServerArrayFinal[0] = ipServer;

            int port;

            if (ipServerArray.length != 2) {
                port = 25565; // Default port of the servers
            } else {
                port = Integer.parseInt(ipServerArray[1]);
            }

            StatusMCServer statusServer = new StatusMCServer(ipServer, port);
            statusServerArrayFinal[0] = statusServer;

            showDataFrame(statusServerArrayFinal[0], ipServerArrayFinal[0]);
         */
        return "a";
    }

    private void start() {
        File DB = new File("MCServers.db");
        if (!DB.exists()) {
            DBManager.createTable();
        }

        final StatusMCServer[] statusServerArrayFinal = new StatusMCServer[1];
        final String[] ipServerArrayFinal = new String[1];

        // Add Listener of the click in the boton JBtnCheck
        /*jBtnCheck.addActionListener((ActionEvent e) -> {
            if (jTxtNameServer.getText().length() != 0) {
                System.out.println("Test jBtnCheck");
                String[] ipServerArray = jTxtNameServer.getText().split(":");

                String ipServer = ipServerArray[0];
                ipServerArrayFinal[0] = ipServer;

                int port;

                if (ipServerArray.length != 2) {
                    port = 25565; // Default port of the servers
                } else {
                    port = Integer.parseInt(ipServerArray[1]);
                }

                StatusMCServer statusServer = new StatusMCServer(ipServer, port);
                statusServerArrayFinal[0] = statusServer;

                showDataFrame(statusServerArrayFinal[0], ipServerArrayFinal[0]);
            }
        });*/
    }

    /*
    private void showDataFrame(StatusMCServer statusServer, String ipServer) {
        System.out.println("Test showDataFrame");
        if ("0".equals(statusServer.obtainData(ipServer))) {
            jLblTxtArResult.setText("Server status:");
            jTxtArResult.setText("ERROR: Not found this server");
        } else {
            jLblTxtArResult.setText("Server status: " + ipServer);
            jTxtArResult.setText(statusServer.obtainData(ipServer));
        }
    }*/

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBtnAdd;
    private javax.swing.JButton jBtnIntroAdd;
    private javax.swing.JDialog jDlgAdd;
    private javax.swing.JLabel jLblAdd;
    private javax.swing.JLabel jLblImage;
    private javax.swing.JLabel jLblIntro;
    private javax.swing.JLabel jLblIpHosts;
    private javax.swing.JLabel jLblOnline;
    private javax.swing.JLabel jLblPlayers;
    private javax.swing.JLabel jLblVersion;
    private javax.swing.JPanel jPanelIntro;
    private javax.swing.JPanel jPnlData;
    private javax.swing.JPanel jPnlDataEx;
    private javax.swing.JPanel jPnlInfo;
    private javax.swing.JPanel jPnlMain;
    private javax.swing.JScrollPane jScrollPane;
    private javax.swing.JTextField jTxtAdd;
    // End of variables declaration//GEN-END:variables
}
